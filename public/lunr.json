[
    {
        "uri": "/_index",
        "content": "---\ntitle: \"Amazon ECS Workshop\"\n---\n\nAmazon ECS Workshop for Fargate\n\nIn this workshop, we will configure GitHub, CodePipeline, CodeBuild, VPC, ALB, ECS, Autoscaling, and Log aggregation using a framework called Mu\n\nWe will launch a frontend, and multiple backend services and will explore how you might adopt this workflow in your environment.\n\nTo get started, please ensure the prerequisites are met.\n\n{{% notice info %}}The Prerequisites take about 15 minutes to set up. Please start now, and we will begin the presentation after.\n{{% /notice %}}\n",
        "tags": []
    },
    {
        "uri": "/Backend 1/_index",
        "title": "Backend Node App",
        "content": "",
        "tags": []
    },
    {
        "uri": "/Backend 2/_index",
        "title": "Backend Crystal App",
        "content": "",
        "tags": []
    },
    {
        "uri": "/Frontend/_index",
        "title": "Frontend Rails App",
        "content": "",
        "tags": []
    },
    {
        "uri": "/Frontend/frontend/_index",
        "title": "Deploy the Frontend Pipeline",
        "content": "\nDeploy the CodePipeline for the Rails Frontend App\n\ncd ~/environment/ecsdemo-frontend\n\nmu pipeline up\n  paste your personal GitHub token\n  This will take 5 minutes\n\nWhen the pipeline is built and running, monitor it's progress with:\nmu pipeline logs acceptance -f\n",
        "tags": []
    },
    {
        "uri": "/Introduction/_index",
        "title": "Introduction",
        "content": "",
        "tags": []
    },
    {
        "uri": "/Platform/_index",
        "title": "Platform",
        "content": "",
        "tags": []
    },
    {
        "uri": "/Platform/environments/_index",
        "title": "Acceptance and Production",
        "content": "\nLet's bring up the Acceptance and Production environments\n\ncd ~/environment/ecsdemo-platform\n\nmu env up acceptance && mu env up production\n  This will probably take 15 minutes\n\nmu pipeline up\n  paste your personal GitHub token\n  This will probably take 10 minutes\n",
        "tags": []
    },
    {
        "uri": "/Prerequisites/_index",
        "title": "Prerequisites",
        "content": "\nPrerequisites for the Workshop\n\nCreate a workspace for the Workshop\nCreate a SSH key for the workshop\nCreate a GitHub token for the workshop\nInstall Mu\nFork the GitHub repos to your own GitHub account\nClone your forked repos via SSH\nBring up the acceptance and production environments\nBring up the environment pipeline\nDeploy the frontend service\n",
        "tags": []
    },
    {
        "uri": "/Prerequisites/clone/_index",
        "title": "Clone your Repos",
        "content": "\nClone your forked repos to your workspace: (replace your_username with your GitHub username)\n\nexport YOURGITHUBNAME=your_username\n\ncd ~/environment\n\ngit clone git@github.com:$YOURGITHUBNAME/ecsdemo-platform.git\n  confirm the github key fingerprint\n\ngit clone git@github.com:$YOURGITHUBNAME/ecsdemo-frontend.git\ngit clone git@github.com:$YOURGITHUBNAME/ecsdemo-nodejs.git\ngit clone git@github.com:$YOUR GITHUB_NAME/ecsdemo-crystal.git\n",
        "tags": []
    },
    {
        "uri": "/Prerequisites/fork/_index",
        "title": "Fork the GitHub Repos",
        "content": "\nFork these GitHub repos to your own GitHub account:\n\nhttps://github.com/brentley/ecsdemo-platform/fork\nhttps://github.com/brentley/ecsdemo-frontend/fork\nhttps://github.com/brentley/ecsdemo-nodejs/fork\nhttps://github.com/brentley/ecsdemo-crystal/fork\n",
        "tags": []
    },
    {
        "uri": "/Prerequisites/software/_index",
        "title": "Install and Configure Mu",
        "content": "\nRun:\ncurl -s https://getmu.io/install.sh | sudo sh\nSince Fargate is currently only in us-east-1 we will adjust our environment's default region:\nexport AWS_REGION=us-east-1\n",
        "tags": []
    },
    {
        "uri": "/Prerequisites/sshkey/_index",
        "title": "Create a SSH key",
        "content": "\nCreate a ssh key and add it to your GitHub account.\nssh-keygen\n  Press enter 4 times to take the default choices\n\ncopy the public key to your clipboard\ncat ~/.ssh/id_rsa.pub\n  Go to https://github.com/settings/ssh/new and paste your key in the box marked \"key\"\n\nType Workshop Cloud9 in the title, and select Add SSH key\n  You should be prompted to confirm your password\n",
        "tags": []
    },
    {
        "uri": "/Prerequisites/token/_index",
        "title": "Create a GitHub token",
        "content": "\nGo to https://github.com/settings/tokens/new\n  Type workshop in the token description\n  Check admin:repo_hook\n  Check repo\n  Select generate token\nCopy your token and save it somewhere convenient for later.\n  You'll occasionally want to copy and paste it again.\n",
        "tags": []
    },
    {
        "uri": "/Prerequisites/workspace/_index",
        "title": "Create a Workspace",
        "content": "\nCreate a Workspace\n\nCreate a Cloud9 Environment\n  select Create environment\nName it Workshop, and take all other defaults\nWhen it comes up, customize the environment by closing the welcome and immediate tabs, and pulling the terminal tab up to the main work area. After that I close the bottom work area.\n",
        "tags": []
    },
    {
        "uri": "/search",
        "content": "---\nlayout: search\ntitle: Search Results\npermalink: /search/\ncategories: [\"Search\"]\ntags: [\"Index\"]\nnoToc: true\n---\n",
        "tags": []
    }
]